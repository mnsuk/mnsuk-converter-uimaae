<function name="mnsuk-converter-uimaae" products="all"
	modified-by="data-explorer-admin" type="converter-java" type-in="application/vxml-unnormalized"
	type-out="application/vxml-unnormalized" max-elt-id="33" modified="1488902251">
	<prototype>
		<label name="label">MNSUK UIMA Analysis Engine from PEAR file</label>
		<description name="description">
<![CDATA[
      This converter accepts a UIMA PEAR file (typically generated by Watson Explorer Content Analytics Studio) that
      will analyse text and generate additional content elements from the UIMA annotations.
      Converter version: !PROJECT_VERSION
    ]]>
</description>
<declare name="pear-filename" type="string" required="required">
<label>Pear filename.</label>
<description>
<![CDATA[
        The name of the UIMA PEAR file to install and use to analyse content. 
        The file must exist in the pearsupport/repo folder of Watson Explorer Engine installation.
        If this is a new PEAR file with a unique internal component ID it is unpacked and installed. 
        If the component ID matches an already installed PEAR and the file has a newer timestamp than the install then the installation is updated,
        otherwise the existing installation is run without unpacking the PEAR file again.
      ]]>
</description>
</declare>
<declare name="exclude-by-default" type="flag">
			<label>Exclude Contents By Default</label>
			<description>
<![CDATA[
        By default this converter uses a black list to exclude specific
        content nodes from being analysed (as specified in the 'Content List').
        That is, only contents explicitly listed are ignored by this converter.
        By checking this option, the behaviour is flipped, and only fields explicitly
        white-listed below will be processed by the converter.
      ]]>
			</description>
		</declare>
<declare name="content-list" type="string-area">
			<label>Content List</label>
			<description>
<![CDATA[
        Provide a newline-separated list of content field names to either include
        or exclude from annotation. If the 'Exclude Contents By Default' box is checked,
        this acts as a white list, and any content fields not listed will be ignored.
        If the box is not checked, this acts as a black list, and all content fields will be
        analysed unless specifically excluded here. Note that in the converter content fields
        are concatenated together to send to UIMA annotator as one document.
        ]]></description>
		</declare>
<declare to-attribute="option-value" name="option-name-value-pairs" type="replacement-pair-list" replace-text="Content Element Name" with-text="Map from UIMA type or feature" replacement-node-name="option-data" from-attribute="option-name">
	<label name="label">Content/Annotation Configuration</label>
	<description name="description">
		<![CDATA[
			Add mappings between content elements and UIMA types/features.
			If a fully qualified UIMA feature name is specified (e.g. com.ibm.Drug:name) that feature is mapped
			to the content element and the covered text is returned as an attribute. If just the annotation type is specified 
			(e.g. com.ibm.Drug) then the covered text of that annotation is mapped to the element and all
			features (with the exception of text offsets - see below) are returned as attributes.
		]]>
	</description>
</declare>
<declare name="enable-annotation-offsets" type="flag">
<label>Return Annotation Offsets</label>
<description>
<![CDATA[Setting this to true will enable output of the start and end source text offsets for the covered text of each annotation as element attributes.
]]>
</description>
</declare>
	</prototype>
	<!--  Reformat option-name-value pairs -->
	<declare name="all-user-options" type="nodeset"/>
	<set-var name="all-user-options">
		<for-each select="$option-name-value-pairs" as="x">
			<option>
				<attribute name="name">type</attribute>
				<value-of select="$x/@option-name" />:<value-of select="$x/@option-value" />
			</option>
		</for-each>
	</set-var>
	<parser type="java">
		<option name="plugin-name">uimaae.plugin@uimaae-converter</option>
		<copy-of select="$all-user-options" />
		<option name="pear-filename">
			<value-of select="$pear-filename" />
		</option>
		<option name="exclude-by-default">
			<value-of select="$exclude-by-default" />
		</option>
		<option name="content-list">
			<value-of select="$content-list" />
		</option>
		<option name="enable-annotation-offsets">
			<value-of select="$enable-annotation-offsets" />
		</option>
	</parser>
</function>